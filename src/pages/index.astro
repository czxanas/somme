---
import Layout from '../layouts/Layout.astro';
import Plus from '../assets/svg/plus.astro';
import Return from '../assets/svg/return.astro';

const seo = {
    // title: 'Astro Boilerplate - Home',
    // description: 'A minimal and powerful Astro boilerplate for fast web development.',
    // social: {
    //     facebook: {
    //         title: 'Astro Boilerplate - Facebook',
    //         description: 'A minimal starter built with Astro. Fast, clean and scalable.',
    //         image: {
    //             url: '/cover-home.jpg' // You can change this path if you have a different image
    //         }
    //     },
    //     twitter: {
    //         creator: '@anas_dev',
    //         title: 'Astro Boilerplate - Twitter',
    //         description: 'Start fast with this clean Astro boilerplate.',
    //         image: {
    //             url: '/cover-home.jpg'
    //         }
    //     }
    // },
    // advanced: {
    //     robots: ['index', 'follow'],
    //     canonical: 'https://yourdomain.com/' // replace with your real domain
    // }
};
---

<Layout title="Home" seo={seo}>
    <section
        class="container max-w-lg min-h-[100dvh] flex flex-col items-center justify-center gap-2"
    >
        <input
            id="number"
            type="number"
            class="w-full text-2xl font-semibold border-4 border-black px-6 h-18 rounded-full focus:outline-0 focus:border-zinc-500 shadow-lg"
        />
        <div class="w-full grid grid-cols-2 gap-1">
            <button
                id="return"
                type="button"
                class="w-full h-18 border-4 border-zinc-700 px-2 py-2 left-rounded bg-red-500 focus:outline-0 focus:border-zinc-500 cursor-pointer shadow-lg"
            >
                <div class="w-fit mx-auto pointer-events-none"><Return /></div>
            </button>
            <button
                id="plus"
                type="button"
                class="w-full h-18 border-4 border-zinc-700 px-2 py-2 right-rounded bg-blue-500 focus:outline-0 focus:border-zinc-500 cursor-pointer shadow-lg"
            >
                <div class="w-fit mx-auto pointer-events-none"><Plus /></div>
            </button>
        </div>
    </section>

    <section id="total" class="fixed w-fit h-fit top-0 left-0 pt-5 pl-5 font-semibold text-xl">
        0<!-- 1000.00 -->
    </section>

    <section id="numbers" class="fixed w-fit h-[35vh] top-0 right-0 p-5 overflow-y-scroll rounded-xl bg-white">
        <ul class="w-fit h-fit flex flex-col items-end">
        </ul>
    </section>
</Layout>

<script>
    import gsap from 'gsap';

    if (typeof window !== 'undefined') {
        window.addEventListener('DOMContentLoaded', () => {
            const input = document.getElementById('number') as HTMLInputElement;
            const plusBtn = document.getElementById('plus') as HTMLElement;
            const returnBtn = document.getElementById('return') as HTMLElement;
            const totalDisplay = document.getElementById('total') as HTMLElement;
            const numbersContainer = document.querySelector('#numbers ul') as HTMLElement;

            let total = 0;

            // === Animations for Plus & Return Buttons ===
            const animateBtn = (btn: any) => {
                const tl = gsap.timeline({ paused: true, reversed: true });
                tl.to(btn, {
                    scale: 0.95,
                    duration: 0.15,
                    ease: 'power2.out'
                });

                btn.addEventListener('mousedown', () => tl.play());
                btn.addEventListener('mouseup', () => tl.reverse());
                btn.addEventListener('mouseleave', () => {
                    if (!tl.reversed()) tl.reverse();
                });
            };

            animateBtn(plusBtn);
            animateBtn(returnBtn);

            // === PLUS logic ===
            plusBtn.addEventListener('click', () => {
                const value = parseFloat(input.value);
                if (isNaN(value)) return;

                // Add to total
                total += value;
                totalDisplay.textContent = total.toFixed(2);

                // Add new <li>
                const li = document.createElement('li');
                li.textContent = value.toFixed(2);
                li.className = 'text-right';
                numbersContainer.appendChild(li);

                // Clear input
                input.value = '';
            });

            // === RETURN logic ===
            returnBtn.addEventListener('click', () => {
                const last = numbersContainer.lastElementChild as any;
                if (!last) return;

                const value = parseFloat(last.textContent);
                if (isNaN(value)) return;

                // Subtract from total
                total -= value;
                totalDisplay.textContent = total.toFixed(2);

                // Remove the last <li>
                numbersContainer.removeChild(last);
            });
        });
    }
</script>

<!-- <script>
    import gsap from 'gsap';
    // Wait for DOM to load
    if (typeof window !== 'undefined') {
        window.addEventListener('DOMContentLoaded', () => {
            const plusBtn = document.getElementById('plus') as HTMLButtonElement;

            // Define the timeline once
            const tl = gsap.timeline({
                paused: true,
                reversed: true,
                onComplete: () => {
                    tl.kill();
                }
            });

            tl.to(plusBtn, {
                scale: 0.95,
                duration: 0.1,
                ease: 'power2.out'
            });

            // Play on press
            plusBtn.addEventListener('mousedown', () => {
                tl.play();
            });

            // Reverse on release
            plusBtn.addEventListener('mouseup', () => {
                tl.reverse();
            });

            // Also handle mouseleave for better UX
            plusBtn.addEventListener('mouseleave', () => {
                if (!tl.reversed()) tl.reverse();
            });

            // Optional: for accessibility, support keyboard press
            plusBtn.addEventListener('keydown', (e) => {
                if (e.key === 'Enter' || e.key === ' ') tl.play();
            });
            plusBtn.addEventListener('keyup', (e) => {
                if (e.key === 'Enter' || e.key === ' ') tl.reverse();
            });
        });
    }
</script> -->

<style>
    .left-rounded {
        border-top-left-radius: 50rem;
        border-bottom-left-radius: 50rem;
        border-top-right-radius: 20rem;
        border-bottom-right-radius: 20rem;
    }
    .right-rounded {
        border-top-right-radius: 50rem;
        border-bottom-right-radius: 50rem;
        border-top-left-radius: 20rem;
        border-bottom-left-radius: 20rem;
    }
</style>
